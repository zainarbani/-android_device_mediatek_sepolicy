type mtk_hal_c2, domain;
type mtk_hal_c2_exec, exec_type, file_type, vendor_file_type;

# Setup for domain transition
init_daemon_domain(mtk_hal_c2)

# Allow to use HWBinder IPC
hwbinder_use(mtk_hal_c2);

# Allow a set of permissions required for a domain to be a server which provides a HAL implementation over HWBinder.
hal_server_domain(mtk_hal_c2, hal_codec2)

# Allow to allocate hidl memory
hal_client_domain(mtk_hal_c2, hal_allocator)

# Purpose : Allow to use kernel driver
allow mtk_hal_c2 vndbinder_device:chr_file { read write open ioctl };
allow mtk_hal_c2 gpu_device:chr_file { read write open ioctl };
allow mtk_hal_c2 ion_device:chr_file { read write open ioctl };
allow mtk_hal_c2 video_device:chr_file { read write open ioctl };
allow mtk_hal_c2 mtk_cmdq_device:chr_file { read write open ioctl };
allow mtk_hal_c2 mtk_mdp_device:chr_file { read write open ioctl };
allow mtk_hal_c2 mtk_fmt_device:chr_file { read write open ioctl };
allow mtk_hal_c2 mtk_fmt_sync_device:chr_file { read write open ioctl };
allow mtk_hal_c2 Vcodec_device:chr_file { read write open ioctl };
allow mtk_hal_c2 MTK_SMI_device:chr_file { read write open ioctl };
allow mtk_hal_c2 dmabuf_system_heap_device:chr_file { read write open ioctl };
allow mtk_hal_c2 dmabuf_system_secure_heap_device:chr_file { read write open ioctl };
allow mtk_hal_c2 mobicore_user_device:chr_file { read write open ioctl };
allow mtk_hal_c2 teei_client_device:chr_file { read write open ioctl };
